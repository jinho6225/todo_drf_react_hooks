{"version":3,"sources":["list/ListOfTodo.js","forms/AddTask.js","forms/UpdateTask.js","App.js","index.js"],"names":["ListOfTodo","taskList","deleteTodo","currentUpdate","lineThrough","className","length","map","task","id","title","key","completed","onClick","aria-hidden","AddTask","addTodo","initialFormState","useState","todo","setTodo","method","type","placeholder","name","value","onChange","e","target","preventDefault","UpdateTask","currentTodo","updateTodo","useEffect","getCookie","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","App","setTaskList","todoList","fetch","then","res","json","data","editing","setEditing","setCurrentTodo","csrftoken","URL","headers","body","JSON","stringify","console","log","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.43f279cd.chunk.js","sourcesContent":["import React from 'react';\n\n\nconst ListOfTodo = ({ taskList, deleteTodo, currentUpdate, lineThrough }) => {\n\n    return (\n      <div className=\"list-container\">\n        <ul className=\"unorder-list\">\n\n            {taskList.length > 0 ? (\n                taskList.map(task => {\n                    const {id, title} = task;\n                    // let className = `content`;\n                    // if (task.completed) className = `content active`\n                        return (\n                            <li className=\"task-list\" key={id}>\n                                <span \n                                    className={`content ${task.completed ? 'active' : ''}`}\n                                    onClick={() => {\n                                        lineThrough(task)\n                                    }}\n                                >{title}</span>\n                                <span className=\"icon\">\n                                    <i \n                                        className=\"far fa-edit\" \n                                        aria-hidden=\"true\"\n                                        onClick={() => {\n                                            currentUpdate(id, title)\n                                        }}\n                                        ></i>\n                                    <i \n                                        className=\"far fa-trash-alt\" \n                                        aria-hidden=\"true\"\n                                        onClick={() => {\n                                            deleteTodo(id)\n                                        }}\n                                        ></i>\n                                </span>\n                            </li>\n                    )})\n                ) : (\n                    <li className=\"task-list\" >\n                        <span className=\"content \">No List now, Enter your todo list</span>\n                        <span className=\"icon\">\n                            <i className=\"far fa-edit\" aria-hidden=\"true\"></i>\n                            <i className=\"far fa-trash-alt\" aria-hidden=\"true\"></i>\n                        </span>\n                    </li>\n            )}\n\n        </ul>\n        </div>\n    )\n}\n\n\n\nexport default ListOfTodo;","import React, { useState } from 'react';\n\n\nconst AddTask = ({ addTodo}) => {\n    const initialFormState = {id: null, title: '', completed: false}\n    const [todo, setTodo] = useState(initialFormState)\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setTodo({...todo, [name]: value })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (!todo.title) return\n\n        addTodo(todo)\n        setTodo(initialFormState)\n    }\n    \n    return (\n        <div className=\"inputBox\">\n            <form method=\"POST\" className=\"inputForm\">\n            <input \n                type=\"text\" \n                placeholder=\"Add task\" \n                className=\"inputField\" \n                name=\"title\" \n                value={todo.title} \n                onChange={handleChange} />\n            <button \n                type=\"submit\" \n                className=\"submitBtn\" \n                onClick={handleSubmit}\n                >\n                Submit</button>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default AddTask;","import React, { useState, useEffect } from 'react';\n\n\nconst UpdateTask = ({ currentTodo, updateTodo }) => {\n    const [todo, setTodo] = useState(currentTodo)\n\n    //edit 상황에서 다른 항목을 누르면 form에 다른 title이 업데이트 된다\n    useEffect(() => {\n        setTodo(currentTodo)\n      }, [currentTodo])\n\n    const handleChange = e => {\n        const { name, value } = e.target;\n        setTodo({...todo, [name]: value })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (!todo.title) return\n        updateTodo(todo)\n        const initialFormState = { id: null, title: '' }\n        setTodo(initialFormState)\n    }\n    \n    return (\n        <div className=\"inputBox\">\n            <form method=\"PUT\" className=\"inputForm\">\n            <input \n                type=\"text\" \n                placeholder=\"Add task\" \n                className=\"inputField\" \n                name=\"title\" \n                value={todo.title} \n                onChange={handleChange} />\n            <button \n                type=\"submit\" \n                className=\"submitBtn\" \n                onClick={handleSubmit}\n                >\n                Update</button>\n            </form>\n        </div>\n    )\n}\n\n\n\nexport default UpdateTask;","import React, { useState, useEffect }  from 'react';\nimport ListOfTodo from './list/ListOfTodo'\nimport AddTask from './forms/AddTask'\nimport UpdateTask from './forms/UpdateTask'\n\nimport './App.css';\n\nfunction getCookie(name) {\n  let cookieValue = null;\n  if (document.cookie && document.cookie !== '') {\n      const cookies = document.cookie.split(';');\n      for (let i = 0; i < cookies.length; i++) {\n          const cookie = cookies[i].trim();\n          // Does this cookie string begin with the name we want?\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n              break;\n          }\n      }\n  }\n  return cookieValue;\n}\n\nfunction App() {\n  const [taskList, setTaskList] = useState([])\n\n  const todoList = () => {\n    let URL = `https://jhmyung6225.pythonanywhere.com/api/task-list`\n    fetch(URL)\n\n    .then((res) => res.json())\n    .then((data) => setTaskList(data));\n  }\n\n  useEffect(() => {\n    todoList()\n  },[]);\n\n  const addTodo = (todo) => {\n    const csrftoken = getCookie('csrftoken');\n    // let URL = \"http://127.0.0.1:8000/api/task-create/\"\n    let URL = `https://jhmyung6225.pythonanywhere.com/api/task-create/`\n\n    fetch(URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({ title: todo.title }),\n    })\n    .then(res => {\n      setTaskList([...taskList, todo])\n    })\n  }\n\n  const deleteTodo = (id) => {\n    console.log(id, 'id')\n    const csrftoken = getCookie('csrftoken');\n    // let URL = `http://127.0.0.1:8000/api/task-delete/${id}`\n    let URL = `https://jhmyung6225.pythonanywhere.com/api/task-delete/${id}`\n\n    fetch(URL, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n    })\n    .then(res => {\n      todoList()\n    })\n  }\n\n  const [editing, setEditing] = useState(false)\n  const initialFormState = { id: null, title: '' }\n  const [currentTodo, setCurrentTodo] = useState(initialFormState)\n\n  const currentUpdate = (id, title) => {\n    setEditing(true)\n    setCurrentTodo({id, title})\n  }\n\n  const updateTodo = ({ id, title }) => {\n    setEditing(false)\n    const csrftoken = getCookie('csrftoken');\n    // let URL = `http://127.0.0.1:8000/api/task-update/${id}`\n    let URL = `https://jhmyung6225.pythonanywhere.com/api/task-update/${id}`    \n    fetch(URL, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({ title }),\n    })\n    .then(res => {\n      todoList()\n    })\n  }\n\n  const lineThrough = (todo) => {\n    todo.completed = !todo.completed\n    const csrftoken = getCookie('csrftoken');\n    // let URL = `http://127.0.0.1:8000/api/task-update/${todo.id}`\n    let URL = `https://jhmyung6225.pythonanywhere.com/api/task-update/${todo.id}`\n    fetch(URL, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      body: JSON.stringify({ \n          title: todo.title, \n          completed: todo.completed \n        }),\n    })\n    .then(res => {\n      todoList()\n    })\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"header\">\n        <h2>Todo List</h2>\n        <h4>(Django RESTful api + React Hooks)</h4>\n      </header>\n      {editing ? (\n        <UpdateTask updateTodo={updateTodo} currentTodo={currentTodo} />\n      ) : (\n        <AddTask addTodo={addTodo} />\n      )}\n      <ListOfTodo \n        taskList={taskList} \n        deleteTodo={deleteTodo} \n        currentUpdate={currentUpdate} \n        lineThrough={lineThrough\n        }/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}